[{"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/index.js":"1","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/App.js":"2","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/Landing.js":"3","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/Profile.js":"4","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/NotFound.js":"5","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/CreateForm.js":"6","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/LogIn.js":"7","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/Register.js":"8","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/utils/queries.js":"9","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/components/PreviousLog.js":"10","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/utils/auth.js":"11","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/utils/mutations.js":"12"},{"size":219,"mtime":1654129317694,"results":"13","hashOfConfig":"14"},{"size":1401,"mtime":1654129317694,"results":"15","hashOfConfig":"14"},{"size":624,"mtime":1654137104544,"results":"16","hashOfConfig":"14"},{"size":1155,"mtime":1654137104545,"results":"17","hashOfConfig":"14"},{"size":383,"mtime":1654137104545,"results":"18","hashOfConfig":"14"},{"size":2300,"mtime":1654139016610,"results":"19","hashOfConfig":"14"},{"size":2144,"mtime":1654138045216,"results":"20","hashOfConfig":"14"},{"size":3304,"mtime":1654138045216,"results":"21","hashOfConfig":"14"},{"size":346,"mtime":1654129317695,"results":"22","hashOfConfig":"14"},{"size":597,"mtime":1654129317694,"results":"23","hashOfConfig":"14"},{"size":1015,"mtime":1654132167920,"results":"24","hashOfConfig":"14"},{"size":942,"mtime":1654139051120,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xe0g2h",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/index.js",[],"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/App.js",[],"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/Landing.js",[],"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/Profile.js",[],"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/NotFound.js",[],"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/CreateForm.js",["53","54"],"import { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_FORM } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst CreateForm = () => {\n  const [formState, setFormState] = useState({\n    name: '',\n    hours_worked: '',\n    role: '',\n    job_site: '',\n    comments: '',\n  });\n  const [createForm, { error, data }] = useMutation(CREATE_FORM);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await createForm({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.createForm.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div className=\"card bg-white card-rounded w-50\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>Please complete the log below</h1>\n      </div>\n      <div className=\"card-body m-5\">\n        <form onSubmit={handleFormSubmit}>\n          <div>\n            {/* Auto fill with user's name */}\n            <label className='p-2'>Name:</label>\n            <input\n              type=\"text\"\n              name='name'\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label className='p-2'>Hours Workd:</label>\n            <input\n              type=\"number\"\n              name='hours'\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            {/* auto fill with user's role */}\n            <label className='p-2'>Role:</label>\n            <input\n              type=\"text\"\n              name='role'\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label className='p-2'>Job Site:</label>\n            <input\n              type=\"text\"\n              name='site'\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <button type='submit' className='btn btn-danger m-1'>Submit Log</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateForm;\n","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/LogIn.js",["55","56","57"],"import { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport Auth from '../utils/auth';\nimport { LOGIN } from '../utils/mutations';\nimport {useState} from 'react';\n\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n// ON SUBMIT OR LINK TO ROUTE? NEED TO VERIFY LOGIN WITH EITHER ACTION AND THEN GO TO PROFILE OR RETURN HERE WITH ERROR MESSAGE\n  return (\n    <div className=\"card bg-white card-rounded w-50\">\n      <div className=\"card-header text-center\">\n        <h1>Please Log In</h1>\n      </div>\n      <div className=\"card-body m-5\">\n          {/* ADJUST FOLLOWING LINE ONCE AUTHENTICATION IS CODED */}\n      <form onSubmit={handleFormSubmit}> \n        <div>\n          <label className='p-2'>Email:</label>\n          <input\n            type=\"email\"\n            name='email'\n            placeholder='Please enter your email here'\n            value={formState.email}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label className='p-2'>Password:</label>\n          <input\n            type=\"password\"\n            name='password'\n            placeholder='Please enter your password here'\n            value={formState.password}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <button type='submit' className='btn btn-danger m-1'>Login</button>\n        </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/pages/Register.js",["58","59","60"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nconst Register = () => {\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [adduser, { error, data }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await adduser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.adduser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n// const Register = () => {\n    return (\n      <div className=\"card bg-white card-rounded w-50\">\n        <div className=\"card-header text-center\">\n          <h1>Please Complete the following to register</h1>\n        </div>\n        <div className=\"card-body m-5\">\n        <form onSubmit={handleFormSubmit}> \n        <div>\n            <label className='p-2'>What is your name?</label>\n            <input\n              type=\"text\"\n              name='name'\n              placeholder='Please enter your name here'\n              value={formState.name}\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label className='p-2'>What is your email?</label>\n            <input\n              type=\"email\"\n              name='email'\n              placeholder='Please enter your email here'\n              value={formState.email}\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label className='p-2'>What would you like your password to be?</label>\n            <input\n              type=\"password\"\n              name='password'\n              placeholder='Please enter your password here'\n              value={formState.password}\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label className='p-2'>What is your role?</label>\n            <br></br>\n            <input\n              type=\"radio\"\n              id=\"Electrician\"\n              name='role'\n              value={formState.role}\n              onChange={handleChange}\n            />\n            <label for='Electrician'>Electrician</label>\n            <br></br>\n            <input\n              type=\"radio\"\n              id=\"Plumber\"\n              name='role'\n              value={formState.role}\n              onChange={handleChange}\n            />\n            <label for='Plumber'>Plumber</label>\n            <br></br>\n            <input\n              type=\"radio\"\n              id=\"Carpenter\"\n              name='role'\n              value={formState.role}\n              onChange={handleChange}\n            />\n            <label for='Carpenter'>Carpenter</label>\n          </div>\n          <div>\n          <br></br>\n            <button type='submit' className='btn btn-danger m-1'>Register</button>\n          </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n  \n  export default Register;","/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/utils/queries.js",[],"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/components/PreviousLog.js",[],"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/utils/auth.js",[],"/Users/heathergraham/Desktop/Heather/git/project3/JS-Work-Logger/client/src/utils/mutations.js",[],{"ruleId":"61","severity":1,"message":"62","line":14,"column":24,"nodeType":"63","messageId":"64","endLine":14,"endColumn":29},{"ruleId":"61","severity":1,"message":"65","line":14,"column":31,"nodeType":"63","messageId":"64","endLine":14,"endColumn":35},{"ruleId":"61","severity":1,"message":"66","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":10,"column":19,"nodeType":"63","messageId":"64","endLine":10,"endColumn":24},{"ruleId":"61","severity":1,"message":"65","line":10,"column":26,"nodeType":"63","messageId":"64","endLine":10,"endColumn":30},{"ruleId":"61","severity":1,"message":"66","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":13,"column":21,"nodeType":"63","messageId":"64","endLine":13,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":13,"column":28,"nodeType":"63","messageId":"64","endLine":13,"endColumn":32},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'Link' is defined but never used."]